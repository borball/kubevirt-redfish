1. Get the application URL by running these commands:
{{- if .Values.route.enabled }}
{{- if contains "https://" .Values.route.host }}
{{- printf "  %s" .Values.route.host }}
{{- else }}
{{- printf "  https://%s" .Values.route.host }}
{{- end }}
{{- else }}
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Values.global.namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kubevirt-redfish.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Values.global.namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Values.global.namespace }} svc -w {{ include "kubevirt-redfish.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.global.namespace }} {{ include "kubevirt-redfish.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ (index .Values.service.ports 0).port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Values.global.namespace }} -l "app.kubernetes.io/name={{ include "kubevirt-redfish.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Values.global.namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Values.global.namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- end }}

2. Redfish API endpoints:
   - Root: /redfish/v1/
   - Systems: /redfish/v1/Systems/
   - Chassis: /redfish/v1/Chassis/
   - Managers: /redfish/v1/Managers/

3. Authentication:
{{- range .Values.authentication.users }}
   - Username: {{ .username }}
     Password: {{ .password }}
     Chassis: {{ .chassis | join ", " }}
{{- end }}

4. Configuration:
   - Server: {{ .Values.server.host }}:{{ .Values.server.port }}
   - TLS: {{ .Values.server.tls.enabled }}
   - Namespace: {{ .Values.global.namespace }}
   - Chassis: {{ range .Values.chassis }}{{ .name }} {{ end }}

5. Check the deployment status:
   kubectl get pods --namespace {{ .Values.global.namespace }} -l "app.kubernetes.io/name={{ include "kubevirt-redfish.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

6. View logs:
   kubectl logs --namespace {{ .Values.global.namespace }} -l "app.kubernetes.io/name={{ include "kubevirt-redfish.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" 